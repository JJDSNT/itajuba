/**
 * Setup Inicial dos Campeonatos
 *
 * Cria:
 * - A planilha m√£e ("Planilha dos Campeonatos")
 * - A aba "Campeonatos" com todos os campos necess√°rios
 * - Um formul√°rio para Criar/Editar/Apagar campeonatos
 * - Conecta o formul√°rio √† planilha m√£e
 * - Restringe o acesso do formul√°rio de administra√ß√£o ao email que executou o script
 * - Envia as vari√°veis de ambiente para o email da pessoa logada (se dispon√≠vel)
 * - Tamb√©m faz Logger separado para debug visual
 *
 * Observa√ß√µes futuras:
 * - Poder√≠amos adaptar a configura√ß√£o para permitir 2 ou 3 administradores
 *   (em vez de apenas 1 email, usar uma lista de emails e adicionar todos como editores).
 * const emailsAutorizados = ['admin1@email.com', 'admin2@email.com'];
 * emailsAutorizados.forEach(email => arquivoFormulario.addEditor(email));
 */
function criarSetupInicial() {
  const NOME_PLANILHA_MAE = 'Planilha dos Campeonatos';
  const NOME_ABA_MAE = 'Campeonatos';
  const NOME_FORMULARIO = 'Formul√°rio de Cria√ß√£o/Edi√ß√£o/Remo√ß√£o de Campeonatos';

  // 1. Criar Planilha M√£e
  const planilhaMae = SpreadsheetApp.create(NOME_PLANILHA_MAE);
  const planilhaMaeId = planilhaMae.getId();
  Logger.log('üìÑ Planilha dos Campeonatos criada: ' + planilhaMae.getUrl());

  // 2. Renomear aba principal e adicionar cabe√ßalhos COMPLETOS
  const aba = planilhaMae.getActiveSheet();
  aba.setName(NOME_ABA_MAE);
  aba.appendRow([
    'Nome do Campeonato',
    'Nome Interno (slug)',
    'Data de In√≠cio',
    'Data de T√©rmino',
    'Observa√ß√µes',
    'Planilha URL',
    'GID Partidas',
    'GID Clubes',
    'GID Formularios',
    'URL Form Criar',
    'URL Form Cadastrar',
    'URL Form Editar'
  ]);

  // 3. Criar Formul√°rio de Criar/Editar/Apagar Campeonato
  const formulario = FormApp.create(NOME_FORMULARIO);
  const formularioUrl = formulario.getPublishedUrl();
  Logger.log('üìù Formul√°rio criado: ' + formularioUrl);

  formulario.addMultipleChoiceItem()
    .setTitle('A√ß√£o')
    .setChoices([
      formulario.createChoice('Criar'),
      formulario.createChoice('Editar'),
      formulario.createChoice('Apagar')
    ])
    .setRequired(true);

  formulario.addTextItem().setTitle('Nome do Campeonato').setRequired(true);
  formulario.addTextItem().setTitle('Nome Interno (slug)').setRequired(false);
  formulario.addDateItem().setTitle('Data de In√≠cio').setRequired(false);
  formulario.addDateItem().setTitle('Data de T√©rmino').setRequired(false);
  formulario.addParagraphTextItem().setTitle('Observa√ß√µes').setRequired(false);

  // 4. Vincular respostas do formul√°rio √† Planilha M√£e
  formulario.setDestination(FormApp.DestinationType.SPREADSHEET, planilhaMaeId);

  // 5. üîí Restringir o acesso do Formul√°rio Admin
  const emailUsuario = Session.getActiveUser().getEmail();
  if (emailUsuario) {
    const arquivoFormulario = DriveApp.getFileById(formulario.getId());
    arquivoFormulario.setSharing(DriveApp.Access.PRIVATE, DriveApp.Permission.NONE);
    arquivoFormulario.addEditor(emailUsuario);

    Logger.log(`üîí Acesso restrito configurado para o formul√°rio admin (${emailUsuario})`);
  } else {
    Logger.log('‚ö†Ô∏è N√£o foi poss√≠vel detectar o email do usu√°rio para configurar o acesso ao formul√°rio.');
  }

  // 6. Montar vari√°veis de ambiente
  const gidAbaCampeonatos = aba.getSheetId();
  const urlCsvPlanilhaMae = `https://docs.google.com/spreadsheets/d/${planilhaMaeId}/export?format=csv&gid=${gidAbaCampeonatos}`;

  // 7. Logger completo (separado)
  Logger.log('üîß Vari√°veis de ambiente para configura√ß√£o:');
  Logger.log('');
  Logger.log(`NG_APP_PLANILHA_MAE_URL=${urlCsvPlanilhaMae}`);
  Logger.log(`NG_APP_FORMULARIO_CAMPEONATO_URL=${formularioUrl}`);
  Logger.log('');
  Logger.log('‚úÖ Setup inicial completo!');

  // 8. Enviar Email
  if (emailUsuario) {
    const assunto = 'Setup Inicial - Vari√°veis de Ambiente do Sistema de Campeonatos';
    const corpoEmail = `
Setup inicial conclu√≠do com sucesso!

üîß Vari√°veis de ambiente para configura√ß√£o:

NG_APP_PLANILHA_MAE_URL=${urlCsvPlanilhaMae}
NG_APP_FORMULARIO_CAMPEONATO_URL=${formularioUrl}

‚úÖ Lembre-se de preencher estas vari√°veis no environment.ts do seu projeto Angular.
    `.trim();

    MailApp.sendEmail({
      to: emailUsuario,
      subject: assunto,
      body: corpoEmail
    });

    Logger.log(`üìß Email enviado para ${emailUsuario}`);
  }
}
